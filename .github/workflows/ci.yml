---

name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  Lint_Format:
    name: Lint (Format)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup (buf)
        env:
          VERSION: "0.21.0"
        run: |
          sudo curl -sSL \
            "https://github.com/bufbuild/buf/releases/download/v${VERSION}/buf-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/buf

          sudo chmod +x /usr/local/bin/buf

      - name: Lint
        run: |
          cd protos
          buf check lint

  Lint_Breaking:
    name: Lint (Breaking)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (current)
        uses: actions/checkout@v2
        with:
          path: current

      - name: Checkout (master)
        uses: actions/checkout@v2
        with:
          ref: master
          path: master

      - name: Setup (buf)
        env:
          VERSION: "0.21.0"
        run: |
          sudo curl -sSL \
            "https://github.com/bufbuild/buf/releases/download/v${VERSION}/buf-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/buf

          sudo chmod +x /usr/local/bin/buf

      - name: Lint
        run: |
          buf check breaking --input ./current/protos --against-input ./master/protos

  Elixir:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (current)
        uses: actions/checkout@v2
        with:
          path: current

      - name: Checkout (elixir)
        uses: actions/checkout@v2
        with:
          ref: elixir
          path: elixir

      - name: Setup (protoc)
        uses: arduino/setup-protoc@v1

      - name: Setup (buf)
        env:
          VERSION: "0.21.0"
        run: |
          sudo curl -sSL \
            "https://github.com/bufbuild/buf/releases/download/v${VERSION}/buf-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/buf

          sudo chmod +x /usr/local/bin/buf

      - name: Setup (elixir)
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.10"
          otp-version: "23.0"

      - name: Dependencies
        run: |
          cd ./elixir
          mix deps.get
          mix compile
          mix escript.install --force hex protobuf

          sudo cp /home/runner/.mix/escripts/protoc-gen-elixir /usr/local/bin/
          sudo chmod +x /usr/local/bin/protoc-gen-elixir

      - name: Generate
        run: |
          rm -rf ./elixir/lib/**/*

          cp -R ./current/protos/. ./elixir/priv/protos/
          cd ./elixir/priv/protos

          buf image build -o - | protoc --elixir_out=../../lib $(buf image build -o - | buf ls-files --input -)

      - name: Format
        run: |
          cd ./elixir
          mix format
